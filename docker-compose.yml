version: '0.1'

services:

  db-postgresql:
    image: vector_pt_br
    command: postgres 
    container_name: vector_postgres
    user: postgres  
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinha
      POSTGRES_HOST_AUTH_METHOD: trust
    logging:
          options:
            max-size: 10m
            max-file: "3"
    network_mode: "host"              
    ports:
          - '5432:5432'
    volumes:
      - /tmp/:/var/Â´run/postgresql/:rw
      - ./postgresql.conf:/var/lib/postgresql/data/postgresql.conf
      - pg_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1.3GB'
    # networks:
    #   - vector-network

  # vector1: &vector
  #   #image: walmeidasantos/herecomesanewchallenger:latest
  #   build: .
  #   hostname: vector1
  #   command: "uvicorn app.main:app --loop uvloop --uds /tmp/vector1.sock --proxy-headers --no-access-log"
  #   # command: bash -c "sleep infinity"
  #   environment:
  #       - DATABASE_URL = postgresql://postgres:postgres@127.0.0.1:5432/rinha
  #       - ENV_NAME=vector
  #       - GUNICORN_BIND=0.0.0.0:8000
  #       - GUNICORN_WORKERS=2
  #       - GUNICORN_KEEPALIVE=4
  #       - GUNICORN_FORWARDED_ALLOW_IPS=*
  #   depends_on:
  #       db-postgresql:
  #         condition: service_healthy
  #   volumes:
  #     - socks:/tmp
  #   deploy:
  #       resources:
  #         limits:
  #           cpus: '0.3'
  #           memory: '0.6GB'
  #   # ports:
  #   # - '8000:8000'
  #   # networks:
  #   #     - vector-network

  # vector2:
  #   <<: *vector
  #   hostname: vector2
  #   command: "uvicorn app.main:app --loop uvloop --uds /tmp/vector2.sock --proxy-headers --no-access-log"


  # nginx:
  #   image: nginx:latest
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - socks:/tmp
  #   depends_on:
  #     vector1:
  #       condition: service_healthy
  #     vector2:
  #       condition: service_healthy
  #   ulimits:
  #     nproc: 1000000
  #     nofile:
  #       soft: 1000000
  #       hard: 1000000
  #   ports:
  #     - "9999:9999"
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.2'
  #         memory: '0.1GB'
    # networks:
    #   - vector-network

# networks:
#   vector-network:

volumes:
  pg_data:
    name: vector_postgres
  socks: