version: '0.1'

services:

  db-postgresql:
    image: vector_pt_br
    command: postgres -c 'max_connections=400'
    container_name: ${ENV_NAME}_postgres
    user: ${POSTGRES_USER}  
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 3s
      timeout: 5s
      retries: 10
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: rinha
      POSTGRES_HOST_AUTH_METHOD: trust
    logging:
          options:
            max-size: 10m
            max-file: "3"
    ports:
          - '5438:5432'
    volumes:
      - /var/lib/postgresql:/var/lib/postgresql   
      - ps_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: '1.3GB'
    networks:
      - vector-network

  vector1:
    image: walmeidasantos/herecomesanewchallenger:latest
    hostname: vector1
    environment:
        - DATABASE_MAX_CONNECTIONS=200
        - GUNICORN_BIND=0.0.0.0:8000
        - GUNICORN_WORKERS=2
        - GUNICORN_KEEPALIVE=4
        - GUNICORN_FORWARDED_ALLOW_IPS=*
    depends_on:
        db-postgresql:
          condition: service_healthy
    deploy:
        resources:
          limits:
            cpus: '0.3'
            memory: '0.6GB'
    # ports:
    # - '8000:8000'
    networks:
        - vector-network

  vector2:
    image: walmeidasantos/herecomesanewchallenger:latest
    hostname: vector2
    environment:
      - DATABASE_MAX_CONNECTIONS=200      
      - GUNICORN_BIND=0.0.0.0:8000
      - GUNICORN_WORKERS=2
      - GUNICORN_KEEPALIVE=4
      - GUNICORN_FORWARDED_ALLOW_IPS=*
    depends_on:
      db-postgresql:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: '0.6GB'
    # ports:
    # - '8001:8000'
    networks:
      - vector-network
  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - vector1
      - vector2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: '0.1GB'
    networks:
      - vector-network

networks:
  vector-network:

volumes:
  ps_data:
    name: ${ENV_NAME}_postgres